/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    guavaVersion = '31.1-jre'
    jetbrainsAnnotationVersion = '23.0.0'
    jooqVersion = '3.17.2'
    commonsLangVersion = '3.12.0'
    commonsIOVersion = '2.11.0'
    commonsCollectionVersion = '4.4'
    h2Version = '2.1.214'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.jetbrains:annotations:${jetbrainsAnnotationVersion}"
    implementation "org.jooq:jooq:${jooqVersion}"
    implementation "org.apache.commons:commons-collections4:${commonsCollectionVersion}"
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    implementation "commons-io:commons-io:${commonsIOVersion}"
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.2')
        }
    }
}
